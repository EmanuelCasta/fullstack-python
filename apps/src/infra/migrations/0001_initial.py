# Generated by Django 4.2.5 on 2023-10-20 07:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=255)),
                ('apellido', models.CharField(max_length=255)),
                ('celular', models.CharField(max_length=20)),
                ('cedula', models.CharField(max_length=20, unique=True)),
                ('edad', models.PositiveIntegerField(null=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('direccion', models.TextField(null=True)),
                ('barrio', models.CharField(max_length=255)),
                ('tipo_persona', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
        migrations.CreateModel(
            name='Inmueble',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_inmueble', models.CharField(choices=[('Apartamento', 'Apartamento'), ('Parqueadero', 'Parqueadero'), ('CuartoÚtil', 'Cuarto Útil')], max_length=255)),
                ('numero', models.CharField(max_length=255)),
                ('piso', models.IntegerField(blank=True, null=True)),
                ('coeficiente', models.DecimalField(decimal_places=2, max_digits=5)),
                ('apartamento_dependiente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='infra.inmueble')),
            ],
        ),
        migrations.CreateModel(
            name='Reservas',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('deposito', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cantidadPersonas', models.PositiveIntegerField()),
                ('esCancelado', models.BooleanField(default=False)),
                ('horaDeSalida', models.DateTimeField()),
                ('horaDeEntrada', models.DateTimeField()),
                ('createReserva', models.DateTimeField(auto_now_add=True)),
                ('isDeposito', models.BooleanField(default=False, help_text='Indica si se ha realizado el depósito')),
                ('IsPago', models.BooleanField(default=False, help_text='Indica si se ha realizado el pago')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'rol',
                'verbose_name_plural': 'roles',
            },
        ),
        migrations.CreateModel(
            name='Vehiculo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_vehiculo', models.CharField(max_length=255)),
                ('marca', models.CharField(max_length=255)),
                ('modelo', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ZonaComunes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('esDisponible', models.BooleanField(default=True)),
                ('nombre', models.CharField(max_length=255)),
                ('maxHora', models.PositiveIntegerField(help_text='Número máximo de horas que se puede reservar')),
                ('esDeposito', models.BooleanField(default=False, help_text='Indica si se requiere un depósito para reservar')),
                ('esPrecio', models.BooleanField(default=False, help_text='Indica si tiene un precio asociado para su uso')),
                ('maxPersona', models.PositiveIntegerField(help_text='Número máximo de personas permitidas')),
                ('precio', models.DecimalField(blank=True, decimal_places=2, help_text='Precio de la zona común si esPrecio es verdadero', max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehiculoUsuario',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('placa', models.CharField(max_length=20)),
                ('isDueño', models.BooleanField(default=True)),
                ('numeroParqueadero', models.CharField(max_length=20)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehiculo_usuarios', to=settings.AUTH_USER_MODEL)),
                ('vehiculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehiculo_usuarios', to='infra.vehiculo')),
            ],
        ),
        migrations.CreateModel(
            name='UsuariosReservas',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('horaEntrada', models.TimeField()),
                ('bool', models.BooleanField(default=False, verbose_name='Estado')),
                ('esLlego', models.BooleanField(default=False)),
                ('reserva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usuario_reservas', to='infra.reservas')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usuario_reservas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UsuarioApartamentos',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('isAutorizado', models.BooleanField(default=False)),
                ('isDueño', models.BooleanField(default=True)),
                ('coeficiente', models.DecimalField(decimal_places=2, max_digits=5)),
                ('inmueble', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inmueble_usuarios', to='infra.inmueble')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usuario_apartamentos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='reservas',
            name='zona_comun',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='infra.zonacomunes'),
        ),
        migrations.CreateModel(
            name='RegistroVisitante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_hora_ingreso', models.DateTimeField(auto_now_add=True)),
                ('tipo_identificacion', models.CharField(max_length=255)),
                ('numero_identificacion', models.CharField(max_length=20, unique=True)),
                ('telefono_contacto', models.CharField(max_length=20)),
                ('numero_parqueadero', models.CharField(blank=True, max_length=20, null=True)),
                ('apartamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registros_visitantes', to='infra.inmueble')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registros_visitantes', to=settings.AUTH_USER_MODEL)),
                ('vehiculo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registros_visitantes', to='infra.vehiculo')),
            ],
        ),
        migrations.CreateModel(
            name='PQRSD',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_registro', models.DateField(auto_now_add=True)),
                ('tipo_pqrs', models.CharField(choices=[('P', 'Petición'), ('Q', 'Queja'), ('R', 'Reclamo'), ('S', 'Sugerencia'), ('D', 'Denuncia')], default='P', max_length=1)),
                ('cedula', models.CharField(max_length=20)),
                ('edad', models.PositiveIntegerField()),
                ('isCorreo', models.BooleanField(default=False)),
                ('isEstado', models.BooleanField(default=False)),
                ('mensaje', models.TextField()),
                ('evidencias', models.FileField(upload_to='evidencias_pqrsd/')),
                ('idResponsable', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pqrsd_responsable', to=settings.AUTH_USER_MODEL)),
                ('usuario_afectado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pqrsd_usuario', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=255)),
                ('archivo_pdf', models.BinaryField(blank=True, null=True)),
                ('pqrsd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documento_afectado', to='infra.pqrsd')),
            ],
        ),
        migrations.CreateModel(
            name='Comentarios',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('mensaje', models.TextField()),
                ('isVisto', models.BooleanField(default=False)),
                ('FechaMensaje', models.DateTimeField(auto_now_add=True)),
                ('pqrsd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comentarios', to='infra.pqrsd')),
                ('usuario_afectado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comentarios_afectado', to=settings.AUTH_USER_MODEL)),
                ('usuario_responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comentarios_responsable', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='usuario',
            name='rol',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usuarios', to='infra.rol'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
